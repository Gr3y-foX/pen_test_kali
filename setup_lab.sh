#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –í–ù–ò–ú–ê–ù–ò–ï: –¢–æ–ª—å–∫–æ –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π!

echo "üéì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "=========================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="linux"
    echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ Linux —Å–∏—Å—Ç–µ–º–∞"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
    echo "‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ macOS —Å–∏—Å—Ç–µ–º–∞"
else
    echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root (–¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π)
if [[ $EUID -eq 0 ]]; then
   echo "‚ö†Ô∏è  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
   ROOT_ACCESS=true
else
   echo "‚ÑπÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ –ø—Ä–∞–≤ root (–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)"
   ROOT_ACCESS=false
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ Linux
install_linux_packages() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è Linux..."
    
    if command -v apt-get &> /dev/null; then
        # Debian/Ubuntu
        sudo apt-get update
        sudo apt-get install -y \
            python3 \
            python3-pip \
            python3-venv \
            nmap \
            netcat-traditional \
            tcpdump \
            wireshark-common \
            git \
            curl \
            wget \
            build-essential \
            libpcap-dev \
            libssl-dev
            
    elif command -v yum &> /dev/null; then
        # CentOS/RHEL
        sudo yum update -y
        sudo yum install -y \
            python3 \
            python3-pip \
            nmap \
            nc \
            tcpdump \
            git \
            curl \
            wget \
            gcc \
            openssl-devel \
            libpcap-devel
            
    elif command -v pacman &> /dev/null; then
        # Arch Linux
        sudo pacman -Syu --noconfirm
        sudo pacman -S --noconfirm \
            python \
            python-pip \
            nmap \
            netcat \
            tcpdump \
            wireshark-cli \
            git \
            curl \
            wget \
            base-devel \
            libpcap \
            openssl
    else
        echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ –≤ macOS
install_macos_packages() {
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è macOS..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Homebrew
    if ! command -v brew &> /dev/null; then
        echo "üç∫ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ Homebrew
    brew update
    brew install \
        python3 \
        nmap \
        netcat \
        tcpdump \
        wireshark \
        git \
        curl \
        wget
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [[ "$OS" == "linux" ]]; then
    install_linux_packages
elif [[ "$OS" == "macos" ]]; then
    install_macos_packages
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)
    echo "‚úÖ Python $PYTHON_VERSION —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üè† –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [[ ! -d "venv" ]]; then
    python3 -m venv venv
    echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"
else
    echo "‚ÑπÔ∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
source venv/bin/activate

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [[ -f "requirements.txt" ]]; then
    pip install -r requirements.txt
    echo "‚úÖ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫..."
python3 -c "import scapy; print('‚úÖ Scapy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Scapy"
python3 -c "import requests; print('‚úÖ Requests —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Requests"
python3 -c "import paramiko; print('‚úÖ Paramiko —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Paramiko"
python3 -c "import nmap; print('‚úÖ Python-nmap —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')" 2>/dev/null || echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ python-nmap"

# –°–æ–∑–¥–∞–Ω–∏–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ Docker –¥–æ—Å—Ç—É–ø–µ–Ω)
if command -v docker &> /dev/null; then
    echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ docker-compose.yml –¥–ª—è —É—è–∑–≤–∏–º—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
    cat > docker-compose.yml << EOF
version: '3.8'

services:
  # –£—è–∑–≤–∏–º–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ DVWA
  dvwa:
    image: vulnerables/web-dvwa
    ports:
      - "8080:80"
    environment:
      - MYSQL_DATABASE=dvwa
      - MYSQL_USER=dvwa
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
    networks:
      - lab-network

  # –£—è–∑–≤–∏–º—ã–π FTP —Å–µ—Ä–≤–µ—Ä
  ftp-server:
    image: stilliard/pure-ftpd
    ports:
      - "2121:21"
      - "30000-30009:30000-30009"
    environment:
      - PUBLICHOST=localhost
      - FTP_USER_NAME=testuser
      - FTP_USER_PASS=testpass
      - FTP_USER_HOME=/home/testuser
    networks:
      - lab-network

  # –£—è–∑–≤–∏–º—ã–π SSH —Å–µ—Ä–≤–µ—Ä
  ssh-server:
    image: ubuntu:20.04
    ports:
      - "2222:22"
    command: >
      bash -c "apt-get update &&
               apt-get install -y openssh-server &&
               echo 'root:password' | chpasswd &&
               echo 'testuser:testpass' | chpasswd &&
               useradd -m testuser &&
               service ssh start &&
               tail -f /dev/null"
    networks:
      - lab-network

  # –ü—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  web-server:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./web-content:/usr/share/nginx/html:ro
    networks:
      - lab-network

networks:
  lab-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
EOF

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–µ–±-–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    mkdir -p web-content
    cat > web-content/index.html << EOF
<!DOCTYPE html>
<html>
<head>
    <title>–¢–µ—Å—Ç–æ–≤—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä</title>
</head>
<body>
    <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä</h1>
    <p>–≠—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.</p>
    <ul>
        <li><a href="/admin/">–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</a></li>
        <li><a href="/backup/">–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏</a></li>
        <li><a href="/config/">–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</a></li>
    </ul>
</body>
</html>
EOF

    cat > web-content/login.php << EOF
<?php
// –£—è–∑–≤–∏–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è SQL injection
if (\$_GET['username'] && \$_GET['password']) {
    \$username = \$_GET['username'];
    \$password = \$_GET['password'];
    
    // –£–Ø–ó–í–ò–ú–´–ô –ö–û–î - –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –í –ü–†–û–î–ê–ö–®–ï–ù–ï!
    \$query = "SELECT * FROM users WHERE username='\$username' AND password='\$password'";
    echo "SQL Query: " . \$query;
    
    if (strpos(\$username, "'") !== false) {
        echo "<br><font color='red'>SQL Error: syntax error near '\$username'</font>";
    }
}
?>
<html>
<body>
    <h2>–£—è–∑–≤–∏–º–∞—è —Ñ–æ—Ä–º–∞ –≤—Ö–æ–¥–∞</h2>
    <form method="GET">
        Username: <input type="text" name="username"><br>
        Password: <input type="password" name="password"><br>
        <input type="submit" value="Login">
    </form>
</body>
</html>
EOF

    echo "‚úÖ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
    echo "‚ÑπÔ∏è  –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose up -d"
    
else
    echo "‚ö†Ô∏è  Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
cat > run_tools.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

echo "üéì –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "=============================================="
echo "1. DDoS —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "2. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏"
echo "3. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏"
echo "4. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "5. –í—ã—Ö–æ–¥"
echo

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-5): " choice

case $choice in
    1)
        echo "üöÄ –ó–∞–ø—É—Å–∫ DDoS –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞..."
        python3 ddos_educational.py --help
        ;;
    2)
        echo "üîç –ó–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤–æ–≥–æ —Å–∫–∞–Ω–µ—Ä–∞..."
        python3 network_scanner.py --help
        ;;
    3)
        echo "üîì –ó–∞–ø—É—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏..."
        python3 exploitation_tools.py --help
        ;;
    4)
        if command -v docker-compose &> /dev/null; then
            echo "üê≥ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
            docker-compose up -d
            echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
            echo "  - DVWA: http://localhost:8080"
            echo "  - –í–µ–±-—Å–µ—Ä–≤–µ—Ä: http://localhost:8081"
            echo "  - FTP: localhost:2121"
            echo "  - SSH: localhost:2222"
        else
            echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        ;;
    5)
        echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        ;;
esac
EOF

chmod +x run_tools.sh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–∫—Ä–∏–ø—Ç–æ–≤
chmod +x ddos_educational.py
chmod +x network_scanner.py
chmod +x exploitation_tools.py

echo ""
echo "üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ:"
echo "  ‚úÖ Python –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
echo "  ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ Python –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
echo "  ‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã (nmap, netcat, etc.)"
echo "  ‚úÖ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  ‚úÖ –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
echo ""
echo "üöÄ –ö–∞–∫ –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É:"
echo "  1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: source venv/bin/activate"
echo "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã: docker-compose up -d"
echo "  3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: ./run_tools.sh"
echo ""
echo "üìö –ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:"
echo "  ‚Ä¢ python3 ddos_educational.py 127.0.0.1 -t http -d 30"
echo "  ‚Ä¢ python3 network_scanner.py 192.168.1.0/24 --all"
echo "  ‚Ä¢ python3 exploitation_tools.py 127.0.0.1 --ssh-brute"
echo ""
echo "‚ö†Ô∏è  –ü–û–ú–ù–ò–¢–ï:"
echo "  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏!"
echo "  ‚Ä¢ –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö!"
echo "  ‚Ä¢ –ò–∑—É—á–∞–π—Ç–µ –¥–ª—è –∑–∞—â–∏—Ç—ã, –∞ –Ω–µ –¥–ª—è –∞—Ç–∞–∫!"
echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md"
